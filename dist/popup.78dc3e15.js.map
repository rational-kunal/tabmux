{"version":3,"sources":["popup.js"],"names":["bgUpdateStateUI","msg","chrome","runtime","sendMessage","state_","state","updateUI","formNode","document","getElementById","inputNode","setAttribute","Math","random","toString","substring","submitNode","addEventListener","e","actionType","sessionName","value","detachNode","sessionListNode","console","info","currentSessionName","style","display","innerHTML","sessions","forEach","session","appendChild","button","name","txt","btnNode","createElement","innerText","className"],"mappings":";AAAA,SAASA,EAAgBC,GACxBC,OAAOC,QAAQC,YAAYH,EAAMI,IAChCC,EAAQD,EACRE,MAKF,IAAID,EAAQ,KAEZ,MAAME,EAAWC,SAASC,eAAe,QAEnCC,EAAYF,SAASC,eAAe,qBAE1CC,EAAUC,aAAa,QAASC,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAErE,MAAMC,EAAaR,SAASC,eAAe,qBAC3CO,EAAWC,iBAAiB,QAAUC,IAErCnB,EAAgB,CACfoB,WAAY,gBACZC,YAAaV,EAAUW,UAIzB,MAAMC,EAAad,SAASC,eAAe,sBAC3Ca,EAAWL,iBAAiB,QAAS,KACpClB,EAAgB,CACfoB,WAAY,qBAId,MAAMI,EAAkBf,SAASC,eAAe,gBAMhD,SAASH,IACRkB,QAAQC,KAAK,eAAgBpB,GACI,OAA7BA,EAAMqB,oBAETnB,EAASoB,MAAMC,QAAU,QACzBN,EAAWK,MAAMC,QAAU,OAC3BL,EAAgBI,MAAMC,QAAU,UAEhCrB,EAASoB,MAAMC,QAAU,OACzBN,EAAWK,MAAMC,QAAU,QAC3BL,EAAgBI,MAAMC,QAAU,OAChCN,EAAWX,aAAa,QAASN,EAAMqB,mBAAqB,aAG7DH,EAAgBM,UAAY,GAE5BxB,EAAMyB,SAASC,QAASC,IACvBT,EAAgBU,YAAYC,EAAOF,EAAQG,SAI7C,SAASD,EAAOE,GACTC,MAAAA,EAAU7B,SAAS8B,cAAc,MAUhCD,OATPA,EAAQE,UAAYH,EACpBC,EAAQG,UAAY,yCACpBH,EAAQpB,iBAAiB,QAAS,KACjClB,EAAgB,CACfoB,WAAY,gBACZC,YAAagB,MAIRC,EApCR9B,EAASoB,MAAMC,QAAU,OACzBN,EAAWK,MAAMC,QAAU,OAsC3B3B,OAAOC,QAAQC,YAAY,CAAEgB,WAAY,eAAkBf,IAC1DC,EAAQD,EACRE","file":"popup.78dc3e15.js","sourceRoot":"../src","sourcesContent":["function bgUpdateStateUI(msg) {\n\tchrome.runtime.sendMessage(msg, (state_) => {\n\t\tstate = state_;\n\t\tupdateUI();\n\t});\n}\n\n// all the data needed for ui\nlet state = null;\n\nconst formNode = document.getElementById('form');\n\nconst inputNode = document.getElementById('session_form_name');\n// some random text for input\ninputNode.setAttribute('value', Math.random().toString(36).substring(7)); // TODO: validation\n\nconst submitNode = document.getElementById('sesssion_form_btn');\nsubmitNode.addEventListener('click', (e) => {\n\t// on click send signal to bgscript\n\tbgUpdateStateUI({\n\t\tactionType: 'START_SESSION',\n\t\tsessionName: inputNode.value,\n\t});\n});\n\nconst detachNode = document.getElementById('detach_session_btn');\ndetachNode.addEventListener('click', () => {\n\tbgUpdateStateUI({\n\t\tactionType: 'DETACH_SESSION',\n\t});\n});\n\nconst sessionListNode = document.getElementById('session_list');\n\nformNode.style.display = 'none'; // initially state is not availabel\ndetachNode.style.display = 'none';\n\n// state is updated now run this thingy\nfunction updateUI() {\n\tconsole.info('state update', state);\n\tif (state.currentSessionName === null) {\n\t\t// there is no currenSession so user can opt to start the show\n\t\tformNode.style.display = 'block';\n\t\tdetachNode.style.display = 'none';\n\t\tsessionListNode.style.display = 'block';\n\t} else {\n\t\tformNode.style.display = 'none';\n\t\tdetachNode.style.display = 'block';\n\t\tsessionListNode.style.display = 'none';\n\t\tdetachNode.setAttribute('value', state.currentSessionName + ' dettach');\n\t}\n\n\tsessionListNode.innerHTML = ''; // remove all children ğŸ˜ˆ\n\n\tstate.sessions.forEach((session) => {\n\t\tsessionListNode.appendChild(button(session.name));\n\t});\n}\n\nfunction button(txt) {\n\tconst btnNode = document.createElement('li');\n\tbtnNode.innerText = txt;\n\tbtnNode.className = 'list-group-item list-group-item-action';\n\tbtnNode.addEventListener('click', () => {\n\t\tbgUpdateStateUI({\n\t\t\tactionType: 'START_SESSION',\n\t\t\tsessionName: txt,\n\t\t});\n\t});\n\n\treturn btnNode;\n}\n\nchrome.runtime.sendMessage({ actionType: 'FETCH_STATE' }, (state_) => {\n\tstate = state_;\n\tupdateUI();\n});\n"]}